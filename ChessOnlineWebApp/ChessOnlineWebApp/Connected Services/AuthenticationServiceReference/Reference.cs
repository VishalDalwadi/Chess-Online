//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChessOnlineWebApp.AuthenticationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationFault", Namespace="http://schemas.datacontract.org/2004/07/AuthenticationService")]
    [System.SerializableAttribute()]
    public partial class AuthenticationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChessOnlineWebApp.AuthenticationServiceReference.AuthenticationFault.AuthenticationFaultType FaultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChessOnlineWebApp.AuthenticationServiceReference.AuthenticationFault.AuthenticationFaultType FaultType {
            get {
                return this.FaultTypeField;
            }
            set {
                if ((this.FaultTypeField.Equals(value) != true)) {
                    this.FaultTypeField = value;
                    this.RaisePropertyChanged("FaultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationFault.AuthenticationFaultType", Namespace="http://schemas.datacontract.org/2004/07/AuthenticationService")]
        public enum AuthenticationFaultType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NoSuchUser = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            InvalidPassword = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ServerFault = 2,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationServiceReference.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AreCorrectCredentials", ReplyAction="http://tempuri.org/IAuthenticationService/AreCorrectCredentialsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChessOnlineWebApp.AuthenticationServiceReference.AuthenticationFault), Action="http://tempuri.org/IAuthenticationService/AreCorrectCredentialsAuthenticationFaul" +
            "tFault", Name="AuthenticationFault", Namespace="http://schemas.datacontract.org/2004/07/AuthenticationService")]
        string AreCorrectCredentials(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AreCorrectCredentials", ReplyAction="http://tempuri.org/IAuthenticationService/AreCorrectCredentialsResponse")]
        System.Threading.Tasks.Task<string> AreCorrectCredentialsAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : ChessOnlineWebApp.AuthenticationServiceReference.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<ChessOnlineWebApp.AuthenticationServiceReference.IAuthenticationService>, ChessOnlineWebApp.AuthenticationServiceReference.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AreCorrectCredentials(string username, string password) {
            return base.Channel.AreCorrectCredentials(username, password);
        }
        
        public System.Threading.Tasks.Task<string> AreCorrectCredentialsAsync(string username, string password) {
            return base.Channel.AreCorrectCredentialsAsync(username, password);
        }
    }
}
